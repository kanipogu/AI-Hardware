# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/156SK4CyyQpW4-WwGU5005S875CAvWR_5
"""

import time
import random
import matplotlib.pyplot as plt

def systolic_bubble_sort(arr):
    n = len(arr)
    for pass_num in range(n - 1):
        for i in range(n - 1):
            if arr[i] > arr[i + 1]:
                arr[i], arr[i + 1] = arr[i + 1], arr[i]
    return arr

print("Test Example (before and after sorting):")
arr = [random.randint(0, 100) for _ in range(10)]
print("Before:", arr)
systolic_bubble_sort(arr)
print("After:", arr)

sizes = [10, 100, 1000, 5000, 10000]
times = []

for size in sizes:
    arr = [random.randint(0, 10000) for _ in range(size)]
    start = time.time()
    systolic_bubble_sort(arr)
    end = time.time()
    times.append(end - start)
    print(f"Sorted {size} elements in {end - start:.5f} seconds")

plt.figure(figsize=(8,6))
plt.plot(sizes, times, marker='o')
plt.xlabel('Array Size')
plt.ylabel('Execution Time (seconds)')
plt.title('Systolic Array Bubble Sort Performance')
plt.grid(True)
plt.show()

sizes = [10, 100, 1000, 5000, 10000]
sys_times = []
builtin_times = []

for size in sizes:
    arr = [random.randint(0, 10000) for _ in range(size)]
    arr_copy = arr.copy()

    start = time.time()
    systolic_bubble_sort(arr)
    end = time.time()
    sys_times.append(end - start)

    start = time.time()
    sorted(arr_copy)
    end = time.time()
    builtin_times.append(end - start)

plt.figure(figsize=(8,6))
plt.plot(sizes, sys_times, marker='o', label='Systolic Bubble Sort')
plt.plot(sizes, builtin_times, marker='x', label='Python Built-in Sort')
plt.xlabel('Array Size')
plt.ylabel('Execution Time (seconds)')
plt.title('Performance Comparison')
plt.legend()
plt.grid(True)
plt.show()